syntax = "proto3";

package crude.crude;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/msg/v1/msg.proto";
import "crude/crude/params.proto";
import "crude/crude/user.proto";

option go_package = "crude/x/crude/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/crude/crude/params";
  
  }
  
  // Queries a list of SpecificUser items.
  rpc specificUser (QuerySpecificUserRequest) returns (QuerySpecificUserResponse) {
    option (google.api.http).get = "/crude/crude/users/{id}";
  
  }
  
  // Queries a list of AllUsers items.
  rpc AllUsers (QueryAllUsersRequest) returns (QueryAllUsersResponse) {
    option (google.api.http).get = "/crude/crude/all_users";
  
  }
  
  // Queries a list of UsersByAge items.
  rpc UsersByAge (QueryUsersByAgeRequest) returns (QueryUsersByAgeResponse) {
    option (google.api.http).get = "/crude/crude/users_by_age/{age}";
  
  }
  
  // Queries a list of UsersByGender items.
  rpc UsersByGender (QueryUsersByGenderRequest) returns (QueryUsersByGenderResponse) {
    option (google.api.http).get = "/crude/crude/users_by_gender/{gender}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QuerySpecificUserRequest {
  uint64 id = 1;
}

message QuerySpecificUserResponse {
  User user = 1;
}

message QueryAllUsersRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUsersResponse {
  repeated User                                   users      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryUsersByAgeRequest {
  uint32                                age        = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryUsersByAgeResponse {
  repeated User                                   users      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryUsersByGenderRequest {
  string                                gender     = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryUsersByGenderResponse {
  repeated User                          users      = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

